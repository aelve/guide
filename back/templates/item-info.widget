Description
============================================================

A header of an item (a dark bar with the title and edit buttons). It consists of a title (item-info-title), controls (item-info-controls), and a form for editing item info (item-info-edit-form).

Required context:

  * item
  * category
  * link_to_item = e.g. /haskell/lenses-pt3tvnwt#item-e4t2tv2n
  * hackage


HTML
============================================================
<div class="item-info" style="background-color:#D6D6D6">
  <div class="section normal shown noscript-shown">
    {{> item-info-anchor }}
    {{> item-info-title }}
    {{> item-info-controls }}
  </div>
  <div class="section editing">
    {{> item-info-edit-form }}
  </div>
</div>

CSS
------------------------------------------------------------
.item-info {
  padding-bottom: 12px;
  padding: 10px 15px;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
}

.item-info .section.normal {
  display: flex;
}

HTML: item-info-anchor
------------------------------------------------------------
<div style="font-size:23px; line-height:27px;">
  <a class="anchor" href="{{link_to_item}}">#</a>
</div>

HTML: item-info-title
------------------------------------------------------------
<div style="font-size:23px; line-height:27px;">
  {{> item-title}}
</div>

HTML: item-info-controls
------------------------------------------------------------
<div class="controls">
  <span>
    {{> img-button
          src    = "/arrow-thick-top.svg"
          title  = "move item up"
          class  = "move-item-up"
          action = [| moveItem("up", {{{%js item.uid}}}); |] }}
    {{> img-button
          src    = "/arrow-thick-bottom.svg"
          title  = "move item down"
          class  = "move-item-down"
          action = [| moveItem("down", {{{%js item.uid}}}); |] }}
  </span>
  <span>
    {{> img-button
          src    = "/cog.svg"
          title  = "edit item info"
          class  = "edit-item-info"
          action = [| editItemInfo({{{%js item.uid}}}); |] }}
    {{> space em=0.4 }}
    {{> img-button
          src    = "/x.svg"
          title  = "delete item"
          class  = "delete-item"
          action = [| deleteItem({{{%js item.uid}}}); |] }}
  </span>
</div>

CSS
------------------------------------------------------------
.item-info .controls {
  margin-left: auto;
  padding-left: 2em;
}
.item-info .controls > span {
  white-space: nowrap;
}
/* on big screens we don't want to wrap the controls */
@media (min-width: 480px) {
  .item-info .controls {
    white-space: nowrap;
  }
  .item-info .controls > span:first-child {
    padding-right: 1em;
  }
}
.item-info .controls img {
  opacity: 0.4;
  height: 20px;
  position: relative;
  bottom: -3px;
}

JS
------------------------------------------------------------
function moveItem(dir, itemUid) {
  var url = "/haskell/move/item/" + itemUid;
      itemNode = '#item-' + itemUid;
  $.post(url, {direction: dir})
   .done(function () {
      if (dir == "up") moveNodeUp(itemNode); else moveNodeDown(itemNode);
      fadeIn(itemNode);
   });
}

function deleteItem(itemUid) {
  var itemNode = '#item-' + itemUid;
  if (confirm("Confirm deletion?")) {
    $.post("/haskell/delete/item/" + itemUid)
     .done(function () {
        fadeOutAndRemove(itemNode);
     });
  }
}

function editItemInfo(itemUid) {
  switchSection("#item-" + itemUid + " .item-info", "editing");
}

CSS
------------------------------------------------------------
.item-info-edit-form label {
  display: block;
  margin-bottom: 5px;
  margin-top: 15px;
}

.item-info-edit-form {
  margin-top: 15px;
  margin-bottom: 5px;
}

HTML: item-info-edit-form
------------------------------------------------------------
{{! "autocomplete=off" everywhere: http://stackoverflow.com/q/8311455 }}
<form class="item-info-edit-form" onsubmit="submitItemInfo('{{item.uid}}', this); return false;">
  <label for="name">
    Name
  </label>
  <input id="name" name="name" value="{{item.name}}"
          type="text" autocomplete="off">

  <label for="hackage">
    Name on Hackage
  </label>
  <input id="hackage" name="hackage" value="{{item.hackage}}"
          type="text" autocomplete="off">

  <label for="site">
    Site (optional)
  </label>
  <input id="site" name="link" value="{{item.link}}"
          type="text" autocomplete="off">

  <div class="form-btn-group">
    <input value="Save" class="save" type="submit">
    <input value="Cancel" class="cancel" type="button"
          onclick="itemInfoCancelEdit('{{item.uid}}');">
  </div>
</form>


JS
------------------------------------------------------------

function itemInfoCancelEdit(itemUid) {
  switchSection("#item-" + itemUid + " > .item-info", "normal");
}

function submitItemInfo(itemUid, form) {
  var url = "/haskell/set/item/" + itemUid + "/info";
      itemNode = '#item-' + itemUid;
  $.post(url, $(form).serialize())
   .done(function (data) {
      $(itemNode + " .item-info").replaceWith(data);
   });
}
